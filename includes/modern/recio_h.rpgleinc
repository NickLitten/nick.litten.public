        // -
        //  Copyright (c) 2001-2010 Scott C. Klement
        //  All rights reserved.

        //  Redistribution and use in source and binary forms, with or without
        //  modification, are permitted provided that the following conditions
        //  are met:
        //  1. Redistributions of source code must retain the above copyright
        //     notice, this list of conditions and the following disclaimer.
        //  2. Redistributions in binary form must reproduce the above copyright
        //     notice, this list of conditions and the following disclaimer in the
        //     documentation and/or other materials provided with the distribution.

        //  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
        //  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        //  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPO
        //  ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        //  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTI
        //  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        //  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        //  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRI
        //  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WA
        //  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        //  SUCH DAMAGE.

        /if defined(RECIO_H)
        /eof
        /endif
        /define RECIO_H

          // *-------------------------------------------------------
          //   Constants:
          // *-------------------------------------------------------
         dcl-c EOF -1;
         dcl-c FILENAME_MAX 39;
         dcl-c ROPEN_MAX 32767;
         dcl-c r_RRN_EQ 134218496;
         dcl-c r_KEY_EQ 184549632;
         dcl-c r_KEY_GT 218104064;
         dcl-c r_KEY_LT 150995200;
         dcl-c r_KEY_LE 167772416;
         dcl-c r_KEY_GE 201326848;
         dcl-c r_KEY_NEXTUNQ 83886336;
         dcl-c r_KEY_PREVUNQ 100663552;
         dcl-c r_KEY_NEXTEQ 234881280;
         dcl-c r_KEY_PREVEQ 251658496;
         dcl-c r_FIRST 16777984;
         dcl-c r_LAST 33555200;
         dcl-c r_NEXT 50332416;
         dcl-c r_PREVIOUS 67109632;
         dcl-c r_START_FRC 50331652;
         dcl-c r_START 16777220;
         dcl-c r_END_FRC 67108868;
         dcl-c r_END 33554436;
         dcl-c r_DFT 184549632;
         dcl-c r_NO_LOCK 1;
         dcl-c r_NO_POSITION 1048576;
         dcl-c r_PRIOR 4096;
         dcl-c r_DATA_ONLY 2;
         dcl-c r_NULL_KEY_MAP 8;
         dcl-c r_READ_NEXT 3;
         dcl-c r_READ_PREV 4;
         dcl-c NOT_NULL_VALUE '0';
         dcl-c NULL_VALUE '1';
         dcl-c MAPPING_ERROR '2';
         dcl-c DK_YES 1;
         dcl-c DK_NO 0;

          // *-------------------------------------------------------
          //   "Record" file handle data type
          // *-------------------------------------------------------
         dcl-ds RFILE_T INZ qualified based(Template);
          in_buf char(16);
          out_buf pointer;
          riofb char(48) likeds(RIOFB_T);
          buf_length char(32);
          in_null_map char(28);
          out_null_map pointer;
          null_key_map pointer;
          min_length char(48);
          null_map_len int(5);
          null_key_map int(5);
          *n char(8);
         end-ds RFILE_T;

          // *-------------------------------------------------------
          //   I/O Feedback Structure  (returned by most Rreadx calls)
          //   typedef struct {
          //     unsigned char               *key;
          //     _Sys_Struct_T               *sysparm;
          //     unsigned long                rrn;
          //     long                         num_bytes;
          //     short                        blk_count;
          //     char                         blk_filled_by;
          //     int                          dup_key   : 1;
          //     int                          icf_locate: 1;
          //     int                          reserved1 : 6;
          //     char                         reserved2[20];
          //   } _RIOFB_T;
          // *-------------------------------------------------------
         dcl-ds RIOFB_T INZ based(Template) align qualified;
          key pointer;
          sysparm pointer;
          rrn uns(10);
          num_bytes int(10);
          blk_count int(5);
          blk_filled_by char(1);
          flags char(1);
          *n char(20);
         end-ds RIOFB_T;

          // -------------------------------------------------------
          //  Open Feedback Information:
          //    typedef _Packed struct _XXDEV_LST_T {
          //       char        pgm_dev_name[10];                 10
          //       char        reserved1[50];                    60
          //       char        dev_desc_name[10];                70
          //       char        dev_class;                        71
          //       char        dev_type;                         72
          //       short       num_rows;                         74
          //       short       num_columns;                      76
          //       /* BIT FLAGS...               */
          //       int         blink_capability_flag    : 1;
          //       int         dev_location_flag        : 1;
          //       int         acquire_status_flag      : 1;
          //       int         invite_status_flag       : 1;
          //       int         data_avail_status_flag   : 1;
          //       int         transaction_status_flag  : 1;
          //       int         requester_dev_flag       : 1;
          //       int         DBCS_dev_flag            : 1;    77
          //       int                                  : 2;    /* reserved   */
          //       int         DBCS_keyboard_flag       : 1;
          //       int                                  : 5;    78
          //       char        synch_level;                     79
          //       char        conversation_type;               80
          //       char        reserved2[50];                  130
          //    } _XXDEV_LST_T;                            (130 bytes long)
          //    typedef _Packed struct _XXOPFB_T {
          //        char        odp_type[2];
          //        char        file_name[10];
          //        char        library_name[10];
          //        char        spool_file_name[10];
          //        char        spool_lib_name[10];
          //        short       spool_file_num;
          //        short       pgm_record_len;
          //        char        reserved1[2];
          //        char        member_name[10];
          //        char        reserved2[8];
          //        short       file_type;
          //        char        reserved3[3];
          //        short       rows;
          //        short       columns;
          //        int         num_records;
          //        char        access_type[2];
          //        char        dup_key_indic;
          //        char        src_file_indic;
          //        char        reserved4[10];
          //        char        reserved5[10];
          //        short       vol_label_offset;
          //        short       max_blocked_recs;
          //        short       overflow_line_num;
          //        short       blocked_rec_incr;
          //        char        reserved6[4];
          //        /* MISCELLANEOUS FLAGS...     */
          //        int                                  : 1;    /* reserved   */
          //        int         file_sharable_flag       : 1;
          //        int         commit_control_flag      : 1;
          //        int         commit_lock_level_flag   : 1;
          //        int         mbr_type_flag            : 1;
          //        int         field_level_file_flag    : 1;
          //        int         DBCS_capable_flag        : 1;
          //        int         EOF_delay_flag           : 1;
          //        char        requester_dev_name[10];
          //        short       file_open_count;
          //        char        reserved7[2];
          //        short       num_based_pf_mbrs;
          //        int         mult_mbr_process_flag    : 1;
          //        int         join_logical_file_flag   : 1;
          //        int         local_remote_data_flag   : 1;
          //        int         remote_AS400_S38_flag    : 1;
          //        int         sep_indic_area_flag      : 1;
          //        int         user_buffers_flag        : 1;
          //        int                                  : 2;      /* reserved   */
          //        char        reserved8[2];
          //        short       max_rcd_length;
          //        unsigned short  ccsid;
          //        int         null_capable             : 1;
          //        int         varlen_fields_file       : 1;
          //        int         varlen_record_file       : 1;
          //        int         ccsid_sub_char           : 1;
          //        int         reserved9                : 4;
          //        char        reserved10[4];
          //        short       max_pgm_devices;
          //        short       num_pgm_devices;
          //        _XXDEV_LST_T dev_list_array[250];
          //    } _XXOPFB_T;
          // -------------------------------------------------------

         dcl-ds XXDEV_LST_T INZ LEN(130) based(Template) qualified align;
          pgm_dev_name char(10);
          dev_desc_name char(50);
          dev_class char(1);
          dev_type char(1);
          num_rows int(5);
          num_columns int(5);
          bit_flags_1 char(1);
          bit_flags_2 char(1);
          sync_level char(1);
          conversation_ char(1);
         end-ds XXDEV_LST_T;

         dcl-ds xxopfb_t INZ based(Template) qualified;
          odp_type char(2);
          file_name char(10);
          library_name char(10);
          spool_file_na char(10);
          spool_lib_nam char(10) EXTFLD;
          spool_file_nu int(5);
          pgm_Record_le int(5);
          AAAAA1 char(2);
          member_name char(10);
          AAAAA2 char(8);
          file_type int(5);
          AAAAA3 char(3);
          rows int(5);
          columns int(5);
          num_records int(10);
          access_type char(2);
          dup_key_indic char(1);
          src_file_indi char(1);
          AAAAA4 char(10);
          AAAAA5 char(10);
          vol_label_off int(5);
          max_blocked_r int(5);
          overlow_line_ int(5);
          blocked_rec_i int(5);
          AAAAA6 char(4);
          misc_flags char(1);
          requester_dev char(10);
          file_open_cou int(5);
          AAAAA7 char(2);
          num_based_pf_ int(5);
          oth_flags char(1);
          AAAAA8 char(2);
          max_rcd_lengt int(5);
          ccsid uns(5);
          moreflags char(1);
          AAAAA9 char(4);
          max_pgm_devic int(5) EXTFLD;
          num_pgm_devic int(5) EXTFLD;
          dev_list_arra  likeds(XXDEV_LST_T) dim(250);
         end-ds xxopfb_t;

          // -------------------------------------------------------
          //   Common I-O Feedback Area
          //         typedef _Packed struct _XXIOFB_T {
          //             short       file_dep_fb_offset;
          //             int         write_count;
          //             int         read_count;
          //             int         write_read_count;
          //             int         other_io_count;
          //             char        reserved1;
          //             char        cur_operation;
          //             char        rec_format[10];
          //             char        dev_class[2];
          //             char        dev_name[10];
          //             int         last_io_rec_len;
          //             char        reserved2[80];
          //             short       num_recs_retrieved;
          //             short       last_io_rec_len2;
          //             char        reserved3[2];
          //             int         cur_blk_count;
          //             char        reserved4[8];
          //         } _XXIOFB_T;
          // -------------------------------------------------------
         dcl-ds XXIOFB_T INZ qualified based(Template);
          file_dep_fd_ int(5);
          write_count int(10);
          read_count int(10);
          write_read_c int(10);
          other_io_cou int(10);
          reserved1 char(1);
          cur_operatio char(1);
          rec_format char(10);
          dev_class char(2);
          dev_name char(10);
          last_io_rec_ int(10);
          reserved2 char(80);
          num_recs_ret int(5);
          last_io_rec_ int(5);
          reserved3 char(2);
          cur_blk_coun int(10);
          reserved4 char(8);
         end-ds XXIOFB_T;

          // *-------------------------------------------------------
          //   _Rclose -- close an open record file
          //    int _Rclose(_RFILE *fp);
          // *-------------------------------------------------------
         dcl-pr Rclose int(10) ExtProc('_Rclose');
          fp  likeds(RFILE_T);
         end-pr Rclose;


          // *-------------------------------------------------------
          //   _Riofbk -- retrieve I/O feedback
          //    _XXIOFB_T *_Riofbk(_RFILE *fp);
          // *-------------------------------------------------------
         dcl-pr Riofbk pointer ExtProc('_Riofbk');
          fp  likeds(RFILE_T);
         end-pr Riofbk;


          // *-------------------------------------------------------
          //   _Rdelete -- delete a record from file
          //    _RIOFB_T *_Rdelete(_RFILE *fp);
          // *-------------------------------------------------------
         dcl-pr Rdelete pointer ExtProc('_Rdelete');
          fp  likeds(RFILE_T);
         end-pr Rdelete;


          // *-------------------------------------------------------
          //  _Rfeod -- Force End Of Data
          //  int _Rfeod(_RFILE *fp);
          // *-------------------------------------------------------
         dcl-pr Rfeod int(10) ExtProc('_Rfeod');
          fp  likeds(RFILE_T);
         end-pr Rfeod;


          // *-------------------------------------------------------
          //  _Rlocate -- Position to a record
          //  _RIOFB_T *_Rlocate(_RFILE *fp, void *key, int klen_rrn,
          //                     int opts);
          // *-------------------------------------------------------
         dcl-pr Rlocate pointer ExtProc('_Rlocate');
          fp  likeds(RFILE_T);
          key pointer value;
          klen_rrn int(10) value;
          opts int(10) value;
         end-pr Rlocate;


          // *-------------------------------------------------------
          //   _Ropen -- open a record file for processing:
          //  _RFILE *_Ropen(const char * filename, const char * mode, ...);
          // *-------------------------------------------------------
         dcl-pr Ropen pointer ExtProc('_Ropen');
         filename pointer value options(*string);
         mode pointer value options(*string);
         end-pr Ropen;


          // *-------------------------------------------------------
          // * _Ropnfbk -- get open feedback information:
          // *
          // * _XXOPFB_T *_Ropnfbk(_RFILE *fp);
          // *
          // *-------------------------------------------------------
         dcl-pr Ropnfbk pointer ExtProc('_Ropnfbk');
          fp  likeds(RFILE_T);
         end-pr Ropnfbk;


          // *-------------------------------------------------------
          //  _Rrlslck -- Release record lock
          //  int _Rrlslck(_RFILE *fp);
          // *-------------------------------------------------------
         dcl-pr Rrlslck int(10) ExtProc('_Rrlslck');
          fp  likeds(RFILE_T);
         end-pr Rrlslck;


          // *-------------------------------------------------------
          //   _Rreadk -- read next record in file by key

          //   _RIOFB_T *_Rreadk(_RFILE *fp, void *buf, size_t size,
          //                     int opts, void *key,
          //                     unsigned int keylen);
          // *-------------------------------------------------------
         dcl-pr Rreadk pointer ExtProc('_Rreadk');
          fp  likeds(RFILE_T);
          buf char(32767) options(*varsize: *omit);
          buf_size uns(10) value;
          opts int(10) value;
          key char(32767) options(*varsize);
          keylen uns(10) value;
         end-pr Rreadk;


          // *-------------------------------------------------------
          //   _Rreadn -- read next record in file
          //    _RIOFB_T *_Rreadn (_RFILE *fp, void *buf, size_t size,
          //                       int opts);
          // *-------------------------------------------------------
         dcl-pr Rreadn pointer ExtProc('_Rreadn');
          fp  likeds(RFILE_T);
          buf char(32767) options(*varsize: *omit);
          buf_size uns(10) value;
          opts int(10) value;
         end-pr Rreadn;


          // *-------------------------------------------------------
          //   _Rreadp -- read previous record in file
          //    _RIOFB_T *_Rreadp(_RFILE *fp, void *buf, size_t size,
          //                      int opts);
          // *-------------------------------------------------------
         dcl-pr Rreadp pointer ExtProc('_Rreadp');
          fp  likeds(RFILE_T);
          buf char(32767) options(*varsize: *omit);
          buf_size uns(10) value;
          opts int(10) value;
         end-pr Rreadp;


          // *-------------------------------------------------------
          //  _Rupdate -- update record
          //  _RIOFB_T *_Rupdate(_RFILE *fp, void *buf, size_t size);
          // *-------------------------------------------------------
         dcl-pr Rupdate pointer ExtProc('_Rupdate');
          fp  likeds(RFILE_T);
          buf char(32767) options(*varsize: *omit);
          size uns(10) value;
         end-pr Rupdate;


          // *-------------------------------------------------------
          //  _Rwrite -- add new record
          //  _RIOFB_T *_Rwrite(_RFILE *fp, void *buf, size_t size);
          // *-------------------------------------------------------
         dcl-pr Rwrite pointer ExtProc('_Rwrite');
          fp  likeds(RFILE_T);
          buf char(32767) options(*varsize: *omit) const;
          size uns(10) value;
         end-pr Rwrite;
