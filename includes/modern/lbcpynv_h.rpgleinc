        // 
        //  Copyright (c) 2008 Scott C. Klement  All rights reserved.
        //  Modernised September 2025 Nick Litten

        //  Redistribution and use in source and binary forms, with or without
        //  modification, are permitted provided that the following conditions
        //  are met:
        //  1. Redistributions of source code must retain the above copyright
        //     notice, this list of conditions and the following disclaimer.
        //  2. Redistributions in binary form must reproduce the above copyright
        //     notice, this list of conditions and the following disclaimer in the
        //     documentation and/or other materials provided with the distribution.

        //  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
        //  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        //  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPO
        //  ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        //  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTI
        //  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        //  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        //  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRI
        //  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WA
        //  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        //  SUCH DAMAGE.

  
        /if defined(LBCPYNV_H_DEFINED)
        /eof
        /endif
        /define LBCPYNV_H_DEFINED

         dcl-ds LBCPYNV_attr_t INZ qualified;
          type char(1) inz(TYPE_INT);
          decpos uns(3) inz(0);
          digits uns(3) inz(0);
          *n int(10) inz(0);
         end-ds LBCPYNV_attr_t;

         dcl-c TYPE_INT const(x'00');
         dcl-c TYPE_FLOAT const(x'01');
         dcl-c TYPE_ZONED const(x'02');
         dcl-c TYPE_PACKED const(x'03');
         dcl-c TYPE_CHAR const(x'04');
         dcl-c TYPE_UINT const(x'0A');

         dcl-pr LBCPYNV  extproc('_LBCPYNV');
          Output pointer value;
          OutAttr  likeds(LBCPYNV_attr_t) const;
          Input pointer value;
          InpAttr  likeds(LBCPYNV_attr_t) const;
         end-pr LBCPYNV;
