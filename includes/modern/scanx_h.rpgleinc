        // 
        //  Copyright (c) 2008 Scott C. Klement  All rights reserved.
        //  Modernised September 2025 Nick Litten

        //  Redistribution and use in source and binary forms, with or without
        //  modification, are permitted provided that the following conditions
        //  are met:
        //  1. Redistributions of source code must retain the above copyright
        //     notice, this list of conditions and the following disclaimer.
        //  2. Redistributions in binary form must reproduce the above copyright
        //     notice, this list of conditions and the following disclaimer in the
        //     documentation and/or other materials provided with the distribution.

        //  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
        //  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        //  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPO
        //  ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
        //  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTI
        //  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
        //  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
        //  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRI
        //  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WA
        //  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
        //  SUCH DAMAGE.

        /if defined(SCANX_H_DEFINED)
        /eof
        /endif
        /define SCANX_H_DEFINED

         dcl-ds SCWC_Control_T INZ qualified based(Template);
          Inds uns(3);
          Comp_Char char(1);
          Work_Area char(1);
          Base_Length int(5);
          Enh_Length uns(20);
          Enh_Resume uns(20);
         end-ds SCWC_Control_T;

        //  flags for "Inds" parameter of controls
         dcl-c SCANX_BASE_EXTENDED 128;
         dcl-c SCANX_COMP_EXTENDED 64;
         dcl-c SCANX_ENHANCED 2;
         dcl-c SCANX_SCAN_START 1;

        //  flags for "scan_opt" parameter of _SCANX
         dcl-c SCANX_NONMIXED 1073741824;
         dcl-c SCANX_EQ 134217728;
         dcl-c SCANX_GT 67108864;
         dcl-c SCANX_LT 33554432;
         dcl-c SCANX_TEST_ESCAPE 16777216;

        dcl-pr SCANX int(10) extproc('_SCANX');
          base_locator pointer;
          controls  likeds(SCWC_Control_T);
          scan_opts int(10) value;
        end-pr SCANX;
